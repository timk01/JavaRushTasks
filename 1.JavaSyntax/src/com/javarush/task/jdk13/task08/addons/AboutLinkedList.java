package com.javarush.task.jdk13.task08.addons;

import java.util.LinkedList;
import java.util.List;

public class AboutLinkedList {
    public static void main(String[] args) {
        List<String> linkedList = new LinkedList<>();
    }
}

/*
Связный список - цепочка объектов. Конкретнее, это двухсвязный список в джава.
Внутри каждый имеет ноды (две): Node preivous, Node last;
каждая нода содержит указатель на предыдущий элемент, на следующий элемент и - значение.
Они сввязаны таким образом между собой и разбросаны по памяти.

Вставка.

Создать узел.
Найти куда вставлять его.
Перекинуть указатели
(с предыдущего узла на новый, с нового на предыдущий; с +1 за новым вставленным на последующий, с нового на последующего)
Если эелмент первый и последний, чуточку иначе (там нули у 0 бывшего элемента и у последнего в списке)

Удалить.
Перекинуть указатели + при желании удалить элемент

Обе процесса - быстрые. O(1), а вот найти элемент по индексу (гет) - это означает перебрать все элементы... т.е. O(n)
Как и в АЛ, в ЛЛ contains - O(n) ровно по той причине, что и выше.

ВЫВОД для ЛЛ:
см. выше про + и -. Если нужно найти элемент, придется прыгать от индексу в индексу
(в отличие от массива, который единый блок памяти)

 */
